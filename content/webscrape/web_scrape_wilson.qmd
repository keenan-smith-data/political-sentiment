---
title: "Web Text Test Scraping"
author: "Keenan Smith"
format: html
---

```{r}
#| label: Library Initiation
here::i_am("content/webscrape/web_scrape_wilson.qmd")
suppressMessages(source(here::here("R", "viable_links_original.R")))

library(foreach)
library(progressr)
library(tidytable)
library(rvest)
```

# Sampling Function

```{r}
sample_helper <- function(df) {
  df |>
    tidytable::slice_sample(n = 10, .by = url_type)
}

sample_wilson <- sample_helper(filtered_wilson[780:5000])
```

```{r}
purrr::walk(.x = sample_wilson$url, .f = browseURL)
```


# Scrape Helper Functions

```{r}
source(here::here("R", "text_sql_statements.R"))
source(here::here("R", "scraping_helpers.R"))
source(here::here("R", "article_pull_html.R"))
source(here::here("R", "article_pull_js.R"))
```

# Foreach Looping Article Pull

```{r}
text_coll_foreach <- function(df) {
  p <- progressr::progressor(along = df$url)
  final_data <- foreach::foreach(i = seq_along(df$url), .combine = rbind, .errorhandling = "remove") %do% {
    p()
    article_pull_html(df[i])
  }
  return(final_data)
}

text_coll_foreach_js <- function(df, remDr) {
  p <- progressr::progressor(along = df$url)
  final_data <- foreach::foreach(i = seq_along(df$url), .combine = rbind, .errorhandling = "remove") %do% {
    p()
    article_pull_js(df[i], remDr) }
  return(final_data)
  }

```

# Testing Loops

```{r}
# progressr::handlers(global = TRUE)
handlers("cli")
wilson_foreach <- text_coll_foreach(filtered_wilson)
```


