---
title: "Link Preparation"
author: "Keenan Smith"
---

```{r}
here::i_am("content/webscrape/link_preparation.qmd")
library(here)
library(DBI)
library(duckdb)
library(tidytable)
```

# Connecting to DuckDB

```{r}
pol_sent_db <- dbConnect(duckdb::duckdb(), dbdir = here("data","political-sentiment.duckdb"))
```

# Loading Lazy DB for dbplyr

```{r}
sitemaps <- dplyr::tbl(pol_sent_db, "sitemap_data")
linkchecker <- dplyr::tbl(pol_sent_db, "linkchecker_data")
source_table <- dplyr::tbl(pol_sent_db, "source_table")
```

# Function Block for Scraping

```{r}
sitemap_viable_links <- function(df,
                                 short.source = NULL,
                                 art.source = NULL,
                                 url.filter,
                                 exclude = FALSE) {
    # Defining OR statement here since DBplyr doesn't like it
    url.filter <- paste(url.filter, collapse = "|")
    # Checking if art.source exists
    if (is.null(art.source)) {
      # Checking if strings are inclusion or exclusion
      if (exclude == FALSE) {
        # Inclusion
        df |>
          dplyr::left_join(source_table, by = source_table$art_source) |>  
          dplyr::filter(short_source == short.source,
                        stringr::str_detect(url, url.filter)) |>
          dplyr::collect()
      } else {
        # Exclusion
        df |>
          dplyr::left_join(source_table, by = source_table$art_source) |>  
          dplyr::filter(short_source == short.source,
                        stringr::str_detect(url, url.filter, negate = TRUE)) |>
          dplyr::collect()
      }
  # If short.source is not used    
  } else if (is.null(short.source)) {
    df |>
      dplyr::filter(art_source == art.source) |>
      dplyr::collect()
  }
}

initial_helper <- function(.df, short.source = NULL, art.source = NULL) {
    if (is.null(art.source)) {
    .df |>
      dplyr::left_join(source_table, by = source_table$art_source) |>  
      dplyr::filter(short_source == short.source) |>
      dplyr::collect()
  } else if (is.null(short.source)) {
    .df |>
      dplyr::filter(art_source == art.source) |>
      dplyr::collect()
  }
}

initial_look <- function(.df, short.source) {
  temp <- initial_helper(.df, short.source)
  urls <- tidytable::map_df(.x = temp$url, .f = xml2::url_parse)
  return(urls)
}

path_examination <- function(.df) {
  .df |>
    tidytable::separate_wider_delim(path, "/") |>
    tidytable::group_by(path2) |>
    tidytable::count(sort = T)
}
```


# Printing Source Table for Reference

```{r}
source_table
```


# AEI Link Exploration

```{r}
initial_look(sitemaps, "aei") |>
  path_examination()

aei_include <- c("articles", "carpe-diem", "op-eds")
```

# Cato Link Exploration

```{r}
initial_look(sitemaps, "cato") |> 
  path_examination()

cato_include <- c("blog", "commentary", "regulation", "policy-analysis", "legal-briefs", "testimony", "supreme-court-review")
```

# HRW Link Exploration

```{r}
initial_look(sitemaps, "hrw") |> 
  path_examination()

hrw_include <- c("news", "report", "world-report")
```

# Heritage Link Exploration

```{r}
initial_look(sitemaps, "heritage") |>
  path_examination()

heritage_exclude <- c("press", "staff")
```

# CAP Link Exploration

```{r}
initial_look(sitemaps, "cap") |>
  path_examination()

cap_include <- c("article")
```

# Urban Institute Link Exploration

```{r}
initial_look(sitemaps, "urban") |>
  path_examination()

urban_include <- c("research")
```

# Merc Institute Link Exploration

```{r}
initial_look(sitemaps, "merc") |>
  path_examination()

merc_include <- c("economic-insights", "research", "hayekprogram")
```

# Manhattan Institute Link Exploration

```{r}
initial_look(sitemaps, "mani") |>
  path_examination()

url_look_mani <- initial_look(sitemaps, "mani")
```

# CBPP Link Exploration

```{r}
initial_look(sitemaps, "cbpp") |>
  path_examination()

cbpp_include <- c("blog", "research", "press")
```

# American Mind Link Exploration

```{r}
initial_look(sitemaps, "am") |>
  path_examination()

am_include <- c("salvo", "features", "memo", "feature")
```

# Discovery Institute Link Exploration

```{r}
initial_look(sitemaps, "disc") |>
  path_examination()

url_look_disc <- initial_look(sitemaps, "disc")
```

# EPIC Link Exploration

```{r}
initial_look(sitemaps, "epic") |>
  path_examination()
```

# Hoover Institute Link Exploration

```{r}
initial_look(sitemaps, "hoov") |>
  path_examination()
```

# Claremont Institute Link Exploration

```{r}
initial_look(sitemaps, "clare") |>
  path_examination()
```

# Guttmacher Institute Link Exploration

```{r}
initial_look(sitemaps, "gutt") |>
  path_examination()

gutt_include <- c("journals", "article", "news-release", "report")
```

# National Review Link Exploration

```{r}
initial_look(linkchecker, "natr") |>
  path_examination()
```

# Jacobin Link Exploration

```{r}
initial_look(linkchecker, "jacob") |>
  path_examination()
```

# Commonwealth Fund Link Exploration

```{r}
initial_look(linkchecker, "comf") |>
  path_examination()

url_look_comf <- initial_look(linkchecker, "comf")
```

# EPI Link Exploration

```{r}
initial_look(linkchecker, "epi") |>
  path_examination()

url_look_epi <- initial_look(linkchecker, "epi")
```

# Open Society Foundations Link Exploration

```{r}
initial_look(linkchecker, "osf") |>
  path_examination()

url_look_osf <- initial_look(linkchecker, "osf")
```

# The Nation Link Exploration

```{r}
initial_look(linkchecker, "tnat") |>
  path_examination()

url_look_tnat <- initial_look(linkchecker, "tnat")
```

# Viable Links

```{r}
filtered_aei <- sitemap_viable_links(sitemaps, short.source = "aei", url.filter = aei_include)

filtered_cato <- sitemap_viable_links(sitemaps, short.source = "cato", url.filter = cato_include)

filtered_heritage <- sitemap_viable_links(sitemaps, short.source = "heritage", url.filter = heritage_exclude, exclude = TRUE)
```

# Disconnect

```{r}
#| label: Disconnect Block
dbDisconnect(pol_sent_db)
```