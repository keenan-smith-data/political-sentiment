---
title: "Sitemap Cleaning"
author: "Keenan Smith"
format: html
---

```{r}
#| label: Library Initiation

here::i_am("content/sitemap_links/sitemap_cleanup_linkchecker.qmd")
library(tidytable)
library(here)
library(googledrive)
library(stringr)
```

```{r}
#| label: Downloading Data from Google Drive
drive_auth(token = drive_token())
```

Only Run when needed to pull down from drive

```{r}
#| label: Downloading csv data off Google Drive
#| eval: false
links_raw <- drive_find(pattern = "links_raw")

raw_links_download <- function(drive_link) {
  drive_download(drive_link, path = here::here("data", drive_link))
}

purrr::map(.x = links_raw$name, raw_links_download)
```

Only needed until Drive is updated with new dataset

```{r}
#| label: Editing old Raw American Mind Links
#| eval: false
links_raw_am_mind <- fread(here("data", "links_raw_americanmindlinks.csv"), header = TRUE)
links_edited_am_mind <-
  links_raw_am_mind |>
    select(1:17)
fwrite(links_edited_am_mind, here("data", "links_raw_americanmindlinks.csv"))
```


```{r}
#| label: Pull Filenames and Files to List
files <- fs::dir_ls(here("data", "linkchecker"), regexp = "\\.csv$")

links_raw_test <- map(.x = files, .f = fread, header = TRUE, fill = TRUE)
```


```{r}
links_raw_linkcheck <- tidytable::bind_rows(links_raw_test)

filtered_linkcheck <- links_raw_linkcheck |>
  tidytable::filter(result == "200 OK") |>
  tidytable::distinct(url, .keep_all = TRUE) |>
  tidytable::select(parentname, result, infostring, url, size) |>
  tidytable::mutate(test_source = as.factor(case_when(
           stringr::str_detect(parentname, "americanmind.org") ~ "American Mind",
           stringr::str_detect(parentname, "claremontreviewofbooks.com") ~ "Claremont Institute",
           stringr::str_detect(parentname, "jacobin.com") ~ "Jacobin",
           stringr::str_detect(parentname, "commonwealthfund.org") ~ "Commonwealth Fund",
           stringr::str_detect(parentname, "epi.org") ~ "EPI",
           stringr::str_detect(parentname, "heritage.org") ~ "Heritage Foundation",
           stringr::str_detect(parentname, "nationalreview.com") ~ "National Review",
           stringr::str_detect(parentname, "opensocietyfoundations.org") ~ "Open Society Foundations",
           stringr::str_detect(parentname, "thenation.com") ~ "The Nation"
         ))) |>
  tidytable::filter(!is.na(test_source))

fwrite(filtered_linkcheck, here("data", "linkchecker", "links_pre-filtered_linkchecker.csv"))
```

```{r}
unique_parents <- filtered_test |>
  distinct(parentname)
```

```{r}
drive_upload(here("data", "linkchecker", "links_pre-filtered_linkchecker.csv"), path = "~/political-sentiment/data/links_pre-filtered_linkchecker.csv")
```

```{r}
disk_to_drive <- function(file_path, over.write = TRUE) {
  temp <- stringr::str_split(file_path, "/")[[1]][9]
  googledrive::drive_upload(file_path, path = glue::glue("~/political-sentiment/data/{temp}"), overwrite = over.write)
}

map(.x = files, .f = disk_to_drive)
```